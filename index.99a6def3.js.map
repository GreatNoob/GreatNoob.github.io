{"mappings":"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","sources":["src/ff14.ts","node_modules/fast-sha256/sha256.js","src/index.ts"],"sourcesContent":["import sha256 from \"fast-sha256\";\n\nexport enum LogMessageType\n{\n\tChatLog = 0,\n\tTerritory = 1,\n\tChangePrimaryPlayer = 2,\n\tAddCombatant = 3,\n\tRemoveCombatant = 4,\n\tPartyList = 11,\n\tPlayerStats = 12,\n\tStartsCasting = 20,\n\tActionEffect = 21,\n\tAOEActionEffect = 22,\n\tCancelAction = 23,\n\tDoTHoT = 24,\n\tDeath = 25,\n\tStatusAdd = 26,\n\tTargetIcon = 27,\n\tWaymarkMarker = 28,\n\tSignMarker = 29,\n\tStatusRemove = 30,\n\tGauge = 31,\n\tWorld = 32,\n\tDirector = 33,\n\tNameToggle = 34,\n\tTether = 35,\n\tLimitBreak = 36,\n\tEffectResult = 37,\n\tStatusList = 38,\n\tUpdateHp = 39,\n\tChangeMap = 40,\n\tSystemLogMessage = 41,\n\tStatusList3 = 42,\n\tSettings = 249,\n\tProcess = 250,\n\tDebug = 251,\n\tPacketDump = 252,\n\tVersion = 253,\n\tError = 254\n}\n\nlet _lookup32 = [\n    3145776,3211312,3276848,3342384,3407920,3473456,3538992,3604528,3670064,3735600,\n    6357040,6422576,6488112,6553648,6619184,6684720,3145777,3211313,3276849,3342385,\n    3407921,3473457,3538993,3604529,3670065,3735601,6357041,6422577,6488113,6553649,\n    6619185,6684721,3145778,3211314,3276850,3342386,3407922,3473458,3538994,3604530,\n    3670066,3735602,6357042,6422578,6488114,6553650,6619186,6684722,3145779,3211315,\n    3276851,3342387,3407923,3473459,3538995,3604531,3670067,3735603,6357043,6422579,\n    6488115,6553651,6619187,6684723,3145780,3211316,3276852,3342388,3407924,3473460,\n    3538996,3604532,3670068,3735604,6357044,6422580,6488116,6553652,6619188,6684724,\n    3145781,3211317,3276853,3342389,3407925,3473461,3538997,3604533,3670069,3735605,\n    6357045,6422581,6488117,6553653,6619189,6684725,3145782,3211318,3276854,3342390,\n    3407926,3473462,3538998,3604534,3670070,3735606,6357046,6422582,6488118,6553654,\n    6619190,6684726,3145783,3211319,3276855,3342391,3407927,3473463,3538999,3604535,\n    3670071,3735607,6357047,6422583,6488119,6553655,6619191,6684727,3145784,3211320,\n    3276856,3342392,3407928,3473464,3539000,3604536,3670072,3735608,6357048,6422584,\n    6488120,6553656,6619192,6684728,3145785,3211321,3276857,3342393,3407929,3473465,\n    3539001,3604537,3670073,3735609,6357049,6422585,6488121,6553657,6619193,6684729,\n    3145825,3211361,3276897,3342433,3407969,3473505,3539041,3604577,3670113,3735649,\n    6357089,6422625,6488161,6553697,6619233,6684769,3145826,3211362,3276898,3342434,\n    3407970,3473506,3539042,3604578,3670114,3735650,6357090,6422626,6488162,6553698,\n    6619234,6684770,3145827,3211363,3276899,3342435,3407971,3473507,3539043,3604579,\n    3670115,3735651,6357091,6422627,6488163,6553699,6619235,6684771,3145828,3211364,\n    3276900,3342436,3407972,3473508,3539044,3604580,3670116,3735652,6357092,6422628,\n    6488164,6553700,6619236,6684772,3145829,3211365,3276901,3342437,3407973,3473509,\n    3539045,3604581,3670117,3735653,6357093,6422629,6488165,6553701,6619237,6684773,\n    3145830,3211366,3276902,3342438,3407974,3473510,3539046,3604582,3670118,3735654,\n    6357094,6422630,6488166,6553702,6619238,6684774];\n\nexport function encrypt(text: string): string\n{   \n    let encoder = new TextEncoder();\n    return _encrypt(sha256(encoder.encode(text)));\n}\n\nfunction _get_enc_table(): number[]\n{\n    let arr = new Array<number>(256);\n    for (let i = 0; i < 256; i++)\n    {\n        var text = ('0' + (i & 0xFF).toString(16)).slice(-2);\n        arr[i] = text.charCodeAt(0) + (text.charCodeAt(1) << 16);\n    }\n    return arr;\n}\n\nfunction _encrypt(bytes: Uint8Array): string\n{\n    let array = new Uint8Array(16);\n    for (let i = 0; i < array.length / 2; i++)\n    {\n        let num = _lookup32[bytes[i]];\n        array[2 * i] = num;\n        array[2 * i + 1] = num >> 16;\n    }\n    let decoder = new TextDecoder(\"utf-8\");\n    return decoder.decode(array);\n}","(function (root, factory) {\n    // Hack to make all exports of this module sha256 function object properties.\n    var exports = {};\n    factory(exports);\n    var sha256 = exports[\"default\"];\n    for (var k in exports) {\n        sha256[k] = exports[k];\n    }\n        \n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        module.exports = sha256;\n    } else if (typeof define === 'function' && define.amd) {\n        define(function() { return sha256; }); \n    } else {\n        root.sha256 = sha256;\n    }\n})(this, function(exports) {\n\"use strict\";\nexports.__esModule = true;\n// SHA-256 (+ HMAC and PBKDF2) for JavaScript.\n//\n// Written in 2014-2016 by Dmitry Chestnykh.\n// Public domain, no warranty.\n//\n// Functions (accept and return Uint8Arrays):\n//\n//   sha256(message) -> hash\n//   sha256.hmac(key, message) -> mac\n//   sha256.pbkdf2(password, salt, rounds, dkLen) -> dk\n//\n//  Classes:\n//\n//   new sha256.Hash()\n//   new sha256.HMAC(key)\n//\nexports.digestLength = 32;\nexports.blockSize = 64;\n// SHA-256 constants\nvar K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,\n    0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,\n    0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,\n    0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n    0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,\n    0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n    0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,\n    0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,\n    0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,\n    0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,\n    0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n    0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\nfunction hashBlocks(w, v, p, pos, len) {\n    var a, b, c, d, e, f, g, h, u, i, j, t1, t2;\n    while (len >= 64) {\n        a = v[0];\n        b = v[1];\n        c = v[2];\n        d = v[3];\n        e = v[4];\n        f = v[5];\n        g = v[6];\n        h = v[7];\n        for (i = 0; i < 16; i++) {\n            j = pos + i * 4;\n            w[i] = (((p[j] & 0xff) << 24) | ((p[j + 1] & 0xff) << 16) |\n                ((p[j + 2] & 0xff) << 8) | (p[j + 3] & 0xff));\n        }\n        for (i = 16; i < 64; i++) {\n            u = w[i - 2];\n            t1 = (u >>> 17 | u << (32 - 17)) ^ (u >>> 19 | u << (32 - 19)) ^ (u >>> 10);\n            u = w[i - 15];\n            t2 = (u >>> 7 | u << (32 - 7)) ^ (u >>> 18 | u << (32 - 18)) ^ (u >>> 3);\n            w[i] = (t1 + w[i - 7] | 0) + (t2 + w[i - 16] | 0);\n        }\n        for (i = 0; i < 64; i++) {\n            t1 = (((((e >>> 6 | e << (32 - 6)) ^ (e >>> 11 | e << (32 - 11)) ^\n                (e >>> 25 | e << (32 - 25))) + ((e & f) ^ (~e & g))) | 0) +\n                ((h + ((K[i] + w[i]) | 0)) | 0)) | 0;\n            t2 = (((a >>> 2 | a << (32 - 2)) ^ (a >>> 13 | a << (32 - 13)) ^\n                (a >>> 22 | a << (32 - 22))) + ((a & b) ^ (a & c) ^ (b & c))) | 0;\n            h = g;\n            g = f;\n            f = e;\n            e = (d + t1) | 0;\n            d = c;\n            c = b;\n            b = a;\n            a = (t1 + t2) | 0;\n        }\n        v[0] += a;\n        v[1] += b;\n        v[2] += c;\n        v[3] += d;\n        v[4] += e;\n        v[5] += f;\n        v[6] += g;\n        v[7] += h;\n        pos += 64;\n        len -= 64;\n    }\n    return pos;\n}\n// Hash implements SHA256 hash algorithm.\nvar Hash = /** @class */ (function () {\n    function Hash() {\n        this.digestLength = exports.digestLength;\n        this.blockSize = exports.blockSize;\n        // Note: Int32Array is used instead of Uint32Array for performance reasons.\n        this.state = new Int32Array(8); // hash state\n        this.temp = new Int32Array(64); // temporary state\n        this.buffer = new Uint8Array(128); // buffer for data to hash\n        this.bufferLength = 0; // number of bytes in buffer\n        this.bytesHashed = 0; // number of total bytes hashed\n        this.finished = false; // indicates whether the hash was finalized\n        this.reset();\n    }\n    // Resets hash state making it possible\n    // to re-use this instance to hash other data.\n    Hash.prototype.reset = function () {\n        this.state[0] = 0x6a09e667;\n        this.state[1] = 0xbb67ae85;\n        this.state[2] = 0x3c6ef372;\n        this.state[3] = 0xa54ff53a;\n        this.state[4] = 0x510e527f;\n        this.state[5] = 0x9b05688c;\n        this.state[6] = 0x1f83d9ab;\n        this.state[7] = 0x5be0cd19;\n        this.bufferLength = 0;\n        this.bytesHashed = 0;\n        this.finished = false;\n        return this;\n    };\n    // Cleans internal buffers and re-initializes hash state.\n    Hash.prototype.clean = function () {\n        for (var i = 0; i < this.buffer.length; i++) {\n            this.buffer[i] = 0;\n        }\n        for (var i = 0; i < this.temp.length; i++) {\n            this.temp[i] = 0;\n        }\n        this.reset();\n    };\n    // Updates hash state with the given data.\n    //\n    // Optionally, length of the data can be specified to hash\n    // fewer bytes than data.length.\n    //\n    // Throws error when trying to update already finalized hash:\n    // instance must be reset to use it again.\n    Hash.prototype.update = function (data, dataLength) {\n        if (dataLength === void 0) { dataLength = data.length; }\n        if (this.finished) {\n            throw new Error(\"SHA256: can't update because hash was finished.\");\n        }\n        var dataPos = 0;\n        this.bytesHashed += dataLength;\n        if (this.bufferLength > 0) {\n            while (this.bufferLength < 64 && dataLength > 0) {\n                this.buffer[this.bufferLength++] = data[dataPos++];\n                dataLength--;\n            }\n            if (this.bufferLength === 64) {\n                hashBlocks(this.temp, this.state, this.buffer, 0, 64);\n                this.bufferLength = 0;\n            }\n        }\n        if (dataLength >= 64) {\n            dataPos = hashBlocks(this.temp, this.state, data, dataPos, dataLength);\n            dataLength %= 64;\n        }\n        while (dataLength > 0) {\n            this.buffer[this.bufferLength++] = data[dataPos++];\n            dataLength--;\n        }\n        return this;\n    };\n    // Finalizes hash state and puts hash into out.\n    //\n    // If hash was already finalized, puts the same value.\n    Hash.prototype.finish = function (out) {\n        if (!this.finished) {\n            var bytesHashed = this.bytesHashed;\n            var left = this.bufferLength;\n            var bitLenHi = (bytesHashed / 0x20000000) | 0;\n            var bitLenLo = bytesHashed << 3;\n            var padLength = (bytesHashed % 64 < 56) ? 64 : 128;\n            this.buffer[left] = 0x80;\n            for (var i = left + 1; i < padLength - 8; i++) {\n                this.buffer[i] = 0;\n            }\n            this.buffer[padLength - 8] = (bitLenHi >>> 24) & 0xff;\n            this.buffer[padLength - 7] = (bitLenHi >>> 16) & 0xff;\n            this.buffer[padLength - 6] = (bitLenHi >>> 8) & 0xff;\n            this.buffer[padLength - 5] = (bitLenHi >>> 0) & 0xff;\n            this.buffer[padLength - 4] = (bitLenLo >>> 24) & 0xff;\n            this.buffer[padLength - 3] = (bitLenLo >>> 16) & 0xff;\n            this.buffer[padLength - 2] = (bitLenLo >>> 8) & 0xff;\n            this.buffer[padLength - 1] = (bitLenLo >>> 0) & 0xff;\n            hashBlocks(this.temp, this.state, this.buffer, 0, padLength);\n            this.finished = true;\n        }\n        for (var i = 0; i < 8; i++) {\n            out[i * 4 + 0] = (this.state[i] >>> 24) & 0xff;\n            out[i * 4 + 1] = (this.state[i] >>> 16) & 0xff;\n            out[i * 4 + 2] = (this.state[i] >>> 8) & 0xff;\n            out[i * 4 + 3] = (this.state[i] >>> 0) & 0xff;\n        }\n        return this;\n    };\n    // Returns the final hash digest.\n    Hash.prototype.digest = function () {\n        var out = new Uint8Array(this.digestLength);\n        this.finish(out);\n        return out;\n    };\n    // Internal function for use in HMAC for optimization.\n    Hash.prototype._saveState = function (out) {\n        for (var i = 0; i < this.state.length; i++) {\n            out[i] = this.state[i];\n        }\n    };\n    // Internal function for use in HMAC for optimization.\n    Hash.prototype._restoreState = function (from, bytesHashed) {\n        for (var i = 0; i < this.state.length; i++) {\n            this.state[i] = from[i];\n        }\n        this.bytesHashed = bytesHashed;\n        this.finished = false;\n        this.bufferLength = 0;\n    };\n    return Hash;\n}());\nexports.Hash = Hash;\n// HMAC implements HMAC-SHA256 message authentication algorithm.\nvar HMAC = /** @class */ (function () {\n    function HMAC(key) {\n        this.inner = new Hash();\n        this.outer = new Hash();\n        this.blockSize = this.inner.blockSize;\n        this.digestLength = this.inner.digestLength;\n        var pad = new Uint8Array(this.blockSize);\n        if (key.length > this.blockSize) {\n            (new Hash()).update(key).finish(pad).clean();\n        }\n        else {\n            for (var i = 0; i < key.length; i++) {\n                pad[i] = key[i];\n            }\n        }\n        for (var i = 0; i < pad.length; i++) {\n            pad[i] ^= 0x36;\n        }\n        this.inner.update(pad);\n        for (var i = 0; i < pad.length; i++) {\n            pad[i] ^= 0x36 ^ 0x5c;\n        }\n        this.outer.update(pad);\n        this.istate = new Uint32Array(8);\n        this.ostate = new Uint32Array(8);\n        this.inner._saveState(this.istate);\n        this.outer._saveState(this.ostate);\n        for (var i = 0; i < pad.length; i++) {\n            pad[i] = 0;\n        }\n    }\n    // Returns HMAC state to the state initialized with key\n    // to make it possible to run HMAC over the other data with the same\n    // key without creating a new instance.\n    HMAC.prototype.reset = function () {\n        this.inner._restoreState(this.istate, this.inner.blockSize);\n        this.outer._restoreState(this.ostate, this.outer.blockSize);\n        return this;\n    };\n    // Cleans HMAC state.\n    HMAC.prototype.clean = function () {\n        for (var i = 0; i < this.istate.length; i++) {\n            this.ostate[i] = this.istate[i] = 0;\n        }\n        this.inner.clean();\n        this.outer.clean();\n    };\n    // Updates state with provided data.\n    HMAC.prototype.update = function (data) {\n        this.inner.update(data);\n        return this;\n    };\n    // Finalizes HMAC and puts the result in out.\n    HMAC.prototype.finish = function (out) {\n        if (this.outer.finished) {\n            this.outer.finish(out);\n        }\n        else {\n            this.inner.finish(out);\n            this.outer.update(out, this.digestLength).finish(out);\n        }\n        return this;\n    };\n    // Returns message authentication code.\n    HMAC.prototype.digest = function () {\n        var out = new Uint8Array(this.digestLength);\n        this.finish(out);\n        return out;\n    };\n    return HMAC;\n}());\nexports.HMAC = HMAC;\n// Returns SHA256 hash of data.\nfunction hash(data) {\n    var h = (new Hash()).update(data);\n    var digest = h.digest();\n    h.clean();\n    return digest;\n}\nexports.hash = hash;\n// Function hash is both available as module.hash and as default export.\nexports[\"default\"] = hash;\n// Returns HMAC-SHA256 of data under the key.\nfunction hmac(key, data) {\n    var h = (new HMAC(key)).update(data);\n    var digest = h.digest();\n    h.clean();\n    return digest;\n}\nexports.hmac = hmac;\n// Fills hkdf buffer like this:\n// T(1) = HMAC-Hash(PRK, T(0) | info | 0x01)\nfunction fillBuffer(buffer, hmac, info, counter) {\n    // Counter is a byte value: check if it overflowed.\n    var num = counter[0];\n    if (num === 0) {\n        throw new Error(\"hkdf: cannot expand more\");\n    }\n    // Prepare HMAC instance for new data with old key.\n    hmac.reset();\n    // Hash in previous output if it was generated\n    // (i.e. counter is greater than 1).\n    if (num > 1) {\n        hmac.update(buffer);\n    }\n    // Hash in info if it exists.\n    if (info) {\n        hmac.update(info);\n    }\n    // Hash in the counter.\n    hmac.update(counter);\n    // Output result to buffer and clean HMAC instance.\n    hmac.finish(buffer);\n    // Increment counter inside typed array, this works properly.\n    counter[0]++;\n}\nvar hkdfSalt = new Uint8Array(exports.digestLength); // Filled with zeroes.\nfunction hkdf(key, salt, info, length) {\n    if (salt === void 0) { salt = hkdfSalt; }\n    if (length === void 0) { length = 32; }\n    var counter = new Uint8Array([1]);\n    // HKDF-Extract uses salt as HMAC key, and key as data.\n    var okm = hmac(salt, key);\n    // Initialize HMAC for expanding with extracted key.\n    // Ensure no collisions with `hmac` function.\n    var hmac_ = new HMAC(okm);\n    // Allocate buffer.\n    var buffer = new Uint8Array(hmac_.digestLength);\n    var bufpos = buffer.length;\n    var out = new Uint8Array(length);\n    for (var i = 0; i < length; i++) {\n        if (bufpos === buffer.length) {\n            fillBuffer(buffer, hmac_, info, counter);\n            bufpos = 0;\n        }\n        out[i] = buffer[bufpos++];\n    }\n    hmac_.clean();\n    buffer.fill(0);\n    counter.fill(0);\n    return out;\n}\nexports.hkdf = hkdf;\n// Derives a key from password and salt using PBKDF2-HMAC-SHA256\n// with the given number of iterations.\n//\n// The number of bytes returned is equal to dkLen.\n//\n// (For better security, avoid dkLen greater than hash length - 32 bytes).\nfunction pbkdf2(password, salt, iterations, dkLen) {\n    var prf = new HMAC(password);\n    var len = prf.digestLength;\n    var ctr = new Uint8Array(4);\n    var t = new Uint8Array(len);\n    var u = new Uint8Array(len);\n    var dk = new Uint8Array(dkLen);\n    for (var i = 0; i * len < dkLen; i++) {\n        var c = i + 1;\n        ctr[0] = (c >>> 24) & 0xff;\n        ctr[1] = (c >>> 16) & 0xff;\n        ctr[2] = (c >>> 8) & 0xff;\n        ctr[3] = (c >>> 0) & 0xff;\n        prf.reset();\n        prf.update(salt);\n        prf.update(ctr);\n        prf.finish(u);\n        for (var j = 0; j < len; j++) {\n            t[j] = u[j];\n        }\n        for (var j = 2; j <= iterations; j++) {\n            prf.reset();\n            prf.update(u).finish(u);\n            for (var k = 0; k < len; k++) {\n                t[k] ^= u[k];\n            }\n        }\n        for (var j = 0; j < len && i * len + j < dkLen; j++) {\n            dk[i * len + j] = t[j];\n        }\n    }\n    for (var i = 0; i < len; i++) {\n        t[i] = u[i] = 0;\n    }\n    for (var i = 0; i < 4; i++) {\n        ctr[i] = 0;\n    }\n    prf.clean();\n    return dk;\n}\nexports.pbkdf2 = pbkdf2;\n});\n","import {LogMessageType, encrypt} from \"./ff14\";\n\nconst fileSelector = document.getElementById('file-selector');\nconst progress_bar = document.getElementById(\"parseBar\");\nconst bar = document.getElementById(\"parseProgress\");\nconst download_button = document.getElementById(\"downloadFile\");\n\nfunction create_download(filename: string, text: string) \n{\n    if (download_button == null) return;\n    \n    download_button.style.display = 'block';\n    download_button.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n    download_button.setAttribute('download', filename);\n}\n\nfunction clear_screen()\n{\n    set_progress_bar(0);\n\n    if (download_button == null) return;\n    download_button.style.display = 'none';\n}\n\nfunction set_progress_bar(percentage: number) \n{   \n    if (percentage > 1 || percentage < 0) return;\n\n    if (progress_bar == null || bar == null) return;\n    \n    if (percentage == 0) bar.style.display = \"none\";\n    else bar.style.display = \"block\";\n\n    progress_bar.style.width = percentage * 100 + \"%\";\n    progress_bar.innerHTML = percentage * 100 + \"%\";\n}\n\nfunction read_file(file: any, handler: (payload: string) => string) {\n    const reader = new FileReader();\n\n    reader.onload = () => {\n        let text = reader.result;\n        if (text == null) {\n            console.log(`file load failed`);\n            return;\n        }\n\n        const out_content = handler(text.toString());\n        create_download(file.name, out_content);\n        console.log(out_content.substring(0,100));\n    } \n    reader.readAsText(file);\n}\n\nfunction parse_ff_log(payload: string): string\n{\n    let lines = payload.split('\\n');\n    let counter = 0; let line_counter = 0;\n\n    let output = \"\";\n    lines.forEach((line_) => {\n        let line = line_.trim();\n        if (line == '') return;\n\n        let loc1 = line.indexOf('|');\n        let loc2 = line.lastIndexOf('|');\n\n        let message_type = Number(line.substring(0, loc1));\n        let text = line.substring(0, loc2);\n        \n        if (message_type == LogMessageType.Version || message_type == LogMessageType.Territory)\n            counter = 0;\n\n        ++counter; ++line_counter;\n\n        const encrypted_text = encrypt(`${text}|${counter}`);\n        text = `${text}|${encrypted_text}`;\n\n        output += text + '\\n';\n\n        set_progress_bar(line_counter/lines.length);\n    });\n    \n    return output;\n}\n\nfunction open_file(event: any) \n{\n    read_file(event.target.files[0], parse_ff_log);\n}\n\nfunction main()\n{   \n    if (fileSelector == null) \n    {\n        console.log(\"fileSelector is null\");\n        return;\n    }\n    fileSelector.addEventListener('change', (event) => {\n        open_file(event);\n    });\n\n    if (download_button == null) \n    {\n        console.log(\"download_button is null\");\n        return;\n    }\n    download_button.addEventListener(\"click\", clear_screen);\n}\n\nmain()"],"names":["$22cef5c59f428df4$export$e8476ba3d6e267b6","root","factory","exports","__esModule","digestLength","blockSize","K","Uint32Array","hashBlocks","w","v","p","pos","len","a","b","c","d","e","f","g","h","u","i","j","t1","t2","Hash1","Hash","this","state","Int32Array","temp","buffer","Uint8Array","bufferLength","bytesHashed","finished","reset","prototype","clean","length","update","data","dataLength","Error","dataPos","finish","out","left","bitLenHi","bitLenLo","padLength","digest","_saveState","_restoreState","from","HMAC1","HMAC","key","inner","outer","pad","istate","ostate","hash","hmac1","fillBuffer","hmac","info","counter","num","hkdfSalt","hkdf","salt","okm","hmac_","bufpos","fill","pbkdf2","password","iterations","dkLen","prf","ctr","t","dk","k","sha256","$8d1f4c1ea4bfa61d$exports","define","amd","$22cef5c59f428df4$var$_lookup32","$22cef5c59f428df4$export$5b0f6292f11d1d18","text","encoder","TextEncoder","bytes","array","TextDecoder","decode","$22cef5c59f428df4$var$_encrypt","$parcel$interopDefault","encode","$b4e14b6b8da86996$var$fileSelector","document","getElementById","$b4e14b6b8da86996$var$progress_bar","$b4e14b6b8da86996$var$bar","$b4e14b6b8da86996$var$download_button","$b4e14b6b8da86996$var$clear_screen","$b4e14b6b8da86996$var$set_progress_bar","style","display","percentage","width","innerHTML","$b4e14b6b8da86996$var$read_file","file","handler","reader","FileReader","onload","result","console","log","out_content","toString","filename","setAttribute","encodeURIComponent","$b4e14b6b8da86996$var$create_download","name","substring","readAsText","$b4e14b6b8da86996$var$parse_ff_log","payload","lines","split","line_counter","output","forEach","line_","line","trim","loc1","indexOf","loc2","lastIndexOf","message_type","Number","Version","Territory","addEventListener","event","target","files","$b4e14b6b8da86996$var$open_file"],"version":3,"file":"index.99a6def3.js.map"}